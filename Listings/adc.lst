C51 COMPILER V9.60.0.0   ADC                                                               12/25/2020 10:26:12 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\adc.obj
COMPILER INVOKED BY: D:\ACTION\Keil_v5\C51\BIN\C51.EXE adc.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\adc.lst) OBJECT(.\Objects\adc.obj)

line level    source

   1          #include "adc.h"
   2          #include <sigmod.h>
   3          #include <tc.h>
   4          
   5          long     temp1;                              //无符号数据
   6          long     temp2;                              //有符号数据
   7          long     tempp;                              //冷端数据
   8          
   9          float    A1out;                  //测量值
  10          float    A2out;                                  //冷端值
  11          float    A3out;                                  //线电阻值
  12          float    Azero;                                  //零点值
  13          
  14          float    AD_OUT;
  15          float    cold;
  16          unsigned char    in_mod;
  17          
  18          void ADC_Init(void)
  19          {
  20   1              in_mod = 8; //75mV
  21   1              CLK_DIV = 0x40;
  22   1              CS5550Init(); 
  23   1              wRIte_w(0x40,0x000011); 
  24   1              delay(1);                                                                                          
  25   1              BB = 1; 
  26   1              AA = 1; 
  27   1              wRIte_w(0xe8,0xffffff);
  28   1      }
  29          
  30          int GetTemper(int temper)
  31          {
  32   1              readTemper();
  33   1              A1out = temp1 /(float)0x01000000 * 124.0; 
  34   1              if ((tempp  & 0x800000) == 0x800000) 
  35   1              {               
  36   2                      A1out = - 1.0 * A1out;          // 测量 A/D 转换器第一通道测量mv值
  37   2              }           
  38   1              A2out = (temp2 / (float)0x01000000) * 0.122264 * 1.00 + 0.0155 ;   // 测量 A/D 转换器第二通道测量v值,即冷
             -端温度
  39   1              datadealt();
  40   1              led_real_disp(AD_OUT);                    // 显示测量值
  41   1              if(AD_OUT > temper)
  42   1                      return 2;
  43   1              else
  44   1                      return 3;
  45   1              
  46   1      }
  47          
  48          
  49          void readTemper(void)
  50          {
  51   1              tempp = read_w(0x0e); 
  52   1              temp1 = read_w(0x16); 
  53   1              temp2 = read_w(0x18);
C51 COMPILER V9.60.0.0   ADC                                                               12/25/2020 10:26:12 PAGE 2   

  54   1      
  55   1      }
  56          
  57          float couple_liner(unsigned char ch, float dat)
  58          {
  59   1              unsigned char  i, line_no; float  kk, bb; float  *ptr;
  60   1      
  61   1              ch = ch - 10;
  62   1              if (ch < 11)        //cold compensation 
  63   1              {   
  64   2                      ptr = cold_t[ch];
  65   2      
  66   2                      for (i = 0;i < 2;i++)
  67   2                      {  
  68   3                              line_no = i; 
  69   3                              if (cold < *(ptr+i)) break;
  70   3                      }
  71   2                      ptr = cold_k[ch]; kk = *(ptr+line_no);
  72   2                      ptr = cold_b[ch]; bb = *(ptr+line_no);
  73   2                      dat = dat + cold * kk + bb;
  74   2              }
  75   1      
  76   1              if (ch < 14)        //TC or TRD linerity 
  77   1              {   
  78   2                      ptr = x_ad[ch];
  79   2      
  80   2                      for (i = 0;i <= linery_no[ch];i++)
  81   2                      {
  82   3                              line_no = i; if( dat < *(ptr+i) ) break;
  83   3                      }
  84   2                      if (i > linery_no[ch]) 
  85   2                      { 
  86   3                              ptr = x_ad[ch]; dat = *(ptr+line_no); 
  87   3                      }
  88   2                      ptr = k_ad[ch]; 
  89   2                      kk = *(ptr+line_no);
  90   2                      ptr = b_ad[ch]; 
  91   2                      bb = *(ptr+line_no);
  92   2                      dat = kk*dat + bb;
  93   2              }
  94   1      
  95   1              return dat;
  96   1      }
  97          
  98          //0-10V 不适用
  99          void datadealt()
 100          {
 101   1              unsigned char i;  unsigned char y;  float temp;
 102   1      
 103   1              cold = sqrt(2196200.0+((1.8639-(A2out + 1.00)*21.0)/0.00000388))-1481.96;   
 104   1      
 105   1              if ((cold > 69.9) || (cold < -25.0)) cold = 25.0;          //计算冷端温度及补偿
 106   1      
 107   1              for(i = 0; i < 1; i++)
 108   1              {
 109   2                      y = in_mod;   //75mV
 110   2                      if (y < 10)                         //DC
 111   2                      { 
 112   3                              if ((y == 1)||(y == 6))  
 113   3                              {
 114   4                                      temp = A1out * 1.00 / 107.0950469;        //26.78272514, 4-20mA,0-20mA
 115   4                              }
C51 COMPILER V9.60.0.0   ADC                                                               12/25/2020 10:26:12 PAGE 3   

 116   3                              else if  (y == 3)            
 117   3                              {
 118   4                                      temp = A1out * 1.00 / 53.54752343;         //100.4352193, 0-75mA
 119   4                              }
 120   3                              else if ((y == 2)||(y == 4))
 121   3                              {
 122   4                                      temp = A1out * 1.00 / 102.8860541;         //102.8820078, 1-5V,0-5V
 123   4                              }
 124   3                              else if  (y == 5)
 125   3                              {
 126   4                                      temp = A1out * 1.00 / 109.7725552;                 //0-10v(R8=6k)
 127   4                              }
 128   3                              else if  (y == 7)
 129   3                              {
 130   4                                      temp = A1out * 1.00 / 20.0;                            //0-20mV
 131   4                              }
 132   3                              else if  (y == 8)
 133   3                              {
 134   4                                      temp = A1out * 1.00 / 75.0;                            //0-75mV
 135   4                              }
 136   3                              else if  (y == 9)
 137   3                              {
 138   4                                      temp = A1out * 1.00 / 100.0;                       //0-100mV
 139   4                              }
 140   3      
 141   3                              temp = temp * (75.0 - 0.0);
 142   3                              if( y <= 2 ) 
 143   3                              {
 144   4                                      temp = temp * 1.25 - (20.0 - 4.0) / 4.0;   // 4-20mA ,1-5V
 145   4                                      temp = temp + 4.0; 
 146   4                              }
 147   3                      }
 148   2                      else if (y < 21)                    // TC 
 149   2                      {   
 150   3                              temp = couple_liner(y, A1out*1.00);
 151   3                      }
 152   2                      else if (y < 24)                    // RTD 
 153   2                      {
 154   3                              temp = (1240.0 - 1.999658*A3out)*(A1out-A3out)/(1240.0-A1out) - 0.999658*A3out;
 155   3                              temp = temp * 3892.601096 * 1.00 / (1240.0-A3out); 
 156   3                              temp = couple_liner(y, temp);
 157   3                      }
 158   2                      AD_OUT = 8.7583*temp-296.193;
 159   2              }                   
 160   1      }
 161          
 162          
 163          
 164          //****************CS5550*******************//
 165          void outb(unsigned char dat)
 166          {
 167   1              unsigned char i;
 168   1              for(i = 0; i < 8; i++) 
 169   1              {
 170   2                      CLK = 0; 
 171   2                      if(dat & 0x80) MOSI = 1; 
 172   2                      else MOSI = 0; 
 173   2                      CLK = 1; 
 174   2                      dat <<= 1;      
 175   2              }
 176   1              CLK = 0;
 177   1      }
C51 COMPILER V9.60.0.0   ADC                                                               12/25/2020 10:26:12 PAGE 4   

 178          
 179          unsigned char inb()         
 180          {
 181   1              unsigned char temp, i;
 182   1              for(i = 0; i < 8; i++) 
 183   1              {
 184   2                      if(i == 7) 
 185   2                              MOSI = 0; 
 186   2                      else 
 187   2                              MOSI = 1;
 188   2      
 189   2                      CLK = 0; 
 190   2                      temp <<= 1; 
 191   2                      CLK = 1; 
 192   2                      if(MISO) 
 193   2                              temp |= 1; 
 194   2                      else 
 195   2                              temp &= 0xFE; 
 196   2                      _nop_();                     
 197   2              }
 198   1              CLK = 0; return temp;
 199   1      }
 200          
 201          void wRIte_w(unsigned char cmd, unsigned long val)       //向指定寄存器写入数据 Cmd=0x40+寄存器地址
 202          {
 203   1              CS_CS5550 = 0; 
 204   1      
 205   1              outb(cmd); outb(val >> 16); outb(val >> 8); outb(val);
 206   1      
 207   1              CS_CS5550 = 1;
 208   1      }
 209          
 210          unsigned long read_w(unsigned char cmd)     //读取指定寄存器数据 Cmd=0x00+寄存器地址
 211          {
 212   1              unsigned long temp;
 213   1      
 214   1              CS_CS5550 = 0; 
 215   1      
 216   1              outb(cmd); 
 217   1              temp = ((unsigned long)inb() << 16); temp |= ((unsigned long)inb() << 8); temp |= inb();
 218   1      
 219   1              CS_CS5550 = 1;
 220   1      
 221   1              return temp;    
 222   1      }   
 223             
 224          
 225          void CS5550Init()
 226          {
 227   1              wRIte_w(0x80,0xffffff); delay(1);
 228   1      
 229   1              wRIte_w(0xff,0xfffffe); delay(1);
 230   1      
 231   1              wRIte_w(0x40,0x000011); delay(1);            //增益10倍，K=1(1分频), iCPU=1
 232   1      
 233   1              wRIte_w(0xe8,0xffffff); delay(1);   
 234   1      
 235   1              wRIte_w(0x4a,0x000138); delay(2);            //N = 312, 80ms
 236   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   ADC                                                               12/25/2020 10:26:12 PAGE 5   

   CODE SIZE        =   2317    ----
   CONSTANT SIZE    =   3722    ----
   XDATA SIZE       =    187      35
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
